{
  "info": {
    "name": "My Bakery API",
    "description": "API collection for My Bakery application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication and authorization",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "description": "Register a new user"
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "description": "Authenticate a user"
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get the current user"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh-token"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"your-refresh-token\"\n}"
            },
            "description": "Refresh a JWT token"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout a user"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\"\n}"
            },
            "description": "Request a password reset"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"password-reset-token\",\n  \"newPassword\": \"newPassword123\"\n}"
            },
            "description": "Reset a password"
          }
        }
      ]
    },
    {
      "name": "User Management",
      "description": "Endpoints for managing users and addresses",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Get the user profile"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\"\n}"
            },
            "description": "Update the user profile"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "1"]
            },
            "description": "Get a user by ID"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "1"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"CUSTOMER\"\n}"
            },
            "description": "Update a user"
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "1"]
            },
            "description": "Delete a user"
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Get all users"
          }
        },
        {
          "name": "Add User Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "addresses"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressLine1\": \"123 Main St\",\n  \"addressLine2\": \"Apt 4B\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"postalCode\": \"10001\",\n  \"country\": \"USA\",\n  \"isDefault\": true,\n  \"addressType\": \"SHIPPING\"\n}"
            },
            "description": "Add a user address"
          }
        },
        {
          "name": "Get User Addresses",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "addresses"]
            },
            "description": "Get user addresses"
          }
        },
        {
          "name": "Update User Address",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/addresses/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "addresses", "1"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressLine1\": \"456 Park Ave\",\n  \"addressLine2\": \"Suite 10C\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"postalCode\": \"10022\",\n  \"country\": \"USA\",\n  \"isDefault\": true,\n  \"addressType\": \"SHIPPING\"\n}"
            },
            "description": "Update a user address"
          }
        },
        {
          "name": "Delete User Address",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/addresses/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "addresses", "1"]
            },
            "description": "Delete a user address"
          }
        }
      ]
    },
    {
      "name": "Product Management",
      "description": "Endpoints for managing products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            },
            "description": "Get all products"
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "1"]
            },
            "description": "Get a product by ID"
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Chocolate Cake\",\n  \"description\": \"Delicious chocolate cake with cream frosting\",\n  \"shortDescription\": \"Chocolate cake with cream frosting\",\n  \"price\": 25.99,\n  \"costPrice\": 10.50,\n  \"category\": {\n    \"id\": 1\n  },\n  \"sku\": \"CAKE-001\",\n  \"barcode\": \"1234567890123\",\n  \"active\": true,\n  \"featured\": false,\n  \"images\": [\n    \"https://example.com/images/chocolate-cake.jpg\"\n  ],\n  \"nutritionalInfo\": {\n    \"calories\": \"350 kcal\",\n    \"fat\": \"15g\",\n    \"carbs\": \"45g\",\n    \"protein\": \"5g\"\n  },\n  \"allergens\": [\n    \"gluten\",\n    \"dairy\",\n    \"eggs\"\n  ],\n  \"ingredients\": [\n    \"flour\",\n    \"sugar\",\n    \"cocoa powder\",\n    \"eggs\",\n    \"butter\",\n    \"milk\"\n  ],\n  \"preparationTime\": 30,\n  \"shelfLife\": \"3 days\",\n  \"storageRequirements\": \"Store in a cool, dry place\"\n}"
            },
            "description": "Create a new product"
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "1"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Chocolate Cake\",\n  \"description\": \"Delicious chocolate cake with cream frosting\",\n  \"shortDescription\": \"Chocolate cake with cream frosting\",\n  \"price\": 27.99,\n  \"costPrice\": 10.50,\n  \"category\": {\n    \"id\": 1\n  },\n  \"sku\": \"CAKE-001\",\n  \"barcode\": \"1234567890123\",\n  \"active\": true,\n  \"featured\": true,\n  \"images\": [\n    \"https://example.com/images/chocolate-cake.jpg\"\n  ],\n  \"nutritionalInfo\": {\n    \"calories\": \"350 kcal\",\n    \"fat\": \"15g\",\n    \"carbs\": \"45g\",\n    \"protein\": \"5g\"\n  },\n  \"allergens\": [\n    \"gluten\",\n    \"dairy\",\n    \"eggs\"\n  ],\n  \"ingredients\": [\n    \"flour\",\n    \"sugar\",\n    \"cocoa powder\",\n    \"eggs\",\n    \"butter\",\n    \"milk\"\n  ],\n  \"preparationTime\": 30,\n  \"shelfLife\": \"3 days\",\n  \"storageRequirements\": \"Store in a cool, dry place\"\n}"
            },
            "description": "Update a product"
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "1"]
            },
            "description": "Delete a product"
          }
        },
        {
          "name": "Search Products by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/search?name=cake",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "search"],
              "query": [
                {
                  "key": "name",
                  "value": "cake"
                }
              ]
            },
            "description": "Search products by name"
          }
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/category/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "category", "1"]
            },
            "description": "Get products by category ID"
          }
        },
        {
          "name": "Get Active Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "active"]
            },
            "description": "Get active products"
          }
        },
        {
          "name": "Get Featured Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/featured",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "featured"]
            },
            "description": "Get featured products"
          }
        },
        {
          "name": "Get Product by SKU",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/sku/CAKE-001",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "sku", "CAKE-001"]
            },
            "description": "Get a product by SKU"
          }
        },
        {
          "name": "Get Product by Barcode",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/barcode/1234567890123",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "barcode", "1234567890123"]
            },
            "description": "Get a product by barcode"
          }
        },
        {
          "name": "Set Product Active Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/1/active?active=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "1", "active"],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                }
              ]
            },
            "description": "Set a product's active status"
          }
        }
      ]
    },
    {
      "name": "Category Management",
      "description": "Endpoints for managing categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            },
            "description": "Get all categories"
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "1"]
            },
            "description": "Get a category by ID"
          }
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Cakes\",\n  \"description\": \"Delicious cakes for all occasions\",\n  \"icon\": \"🎂\",\n  \"parentId\": null,\n  \"sortOrder\": 1,\n  \"active\": true\n}"
            },
            "description": "Create a new category"
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "1"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Specialty Cakes\",\n  \"description\": \"Delicious specialty cakes for all occasions\",\n  \"icon\": \"🎂\",\n  \"parentId\": null,\n  \"sortOrder\": 1,\n  \"active\": true\n}"
            },
            "description": "Update a category"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "1"]
            },
            "description": "Delete a category"
          }
        },
        {
          "name": "Get Categories by Parent ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/parent/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "parent", "1"]
            },
            "description": "Get categories by parent ID"
          }
        },
        {
          "name": "Get Root Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/root",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "root"]
            },
            "description": "Get root categories (categories with no parent)"
          }
        },
        {
          "name": "Get Active Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "active"]
            },
            "description": "Get active categories"
          }
        },
        {
          "name": "Search Categories by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/search?name=cake",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "search"],
              "query": [
                {
                  "key": "name",
                  "value": "cake"
                }
              ]
            },
            "description": "Search categories by name"
          }
        },
        {
          "name": "Set Category Active Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/1/active?active=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "1", "active"],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                }
              ]
            },
            "description": "Set a category's active status"
          }
        }
      ]
    },
    {
      "name": "Shopping Cart",
      "description": "Endpoints for managing shopping carts",
      "item": [
        {
          "name": "Get Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "Optional - if not provided, returns guest cart"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            },
            "description": "Get the current user's cart or guest cart"
          }
        },
        {
          "name": "Add Item to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "Optional - if not provided, adds to guest cart"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": 1,\n  \"quantity\": 2,\n  \"specialInstructions\": \"Extra frosting please\"\n}"
            },
            "description": "Add an item to the cart"
          }
        },
        {
          "name": "Update Cart Item Quantity",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "Optional - if not provided, updates guest cart"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "1"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 3\n}"
            },
            "description": "Update a cart item's quantity"
          }
        },
        {
          "name": "Remove Item from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "Optional - if not provided, removes from guest cart"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "1"]
            },
            "description": "Remove an item from the cart"
          }
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "Optional - if not provided, clears guest cart"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/clear",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "clear"]
            },
            "description": "Clear the cart"
          }
        },
        {
          "name": "Merge Guest Cart into User Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/merge",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "merge"]
            },
            "description": "Merge a guest cart into a user cart after login"
          }
        }
      ]
    },
    {
      "name": "Order Management",
      "description": "Endpoints for managing orders",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": 1,\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 2,\n      \"unitPrice\": 25.99,\n      \"specialInstructions\": \"Extra frosting\"\n    },\n    {\n      \"productId\": 2,\n      \"quantity\": 1,\n      \"unitPrice\": 15.50,\n      \"specialInstructions\": null\n    }\n  ],\n  \"shippingAmount\": 5.00,\n  \"taxAmount\": 4.15,\n  \"discountAmount\": 0,\n  \"shippingAddress\": {\n    \"id\": 1\n  },\n  \"billingAddress\": {\n    \"id\": 1\n  },\n  \"paymentMethod\": \"CREDIT_CARD\",\n  \"notes\": \"Please deliver in the morning\"\n}"
            },
            "description": "Create a new order"
          }
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            },
            "description": "Get all orders (admin only)"
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "1"]
            },
            "description": "Get an order by ID"
          }
        },
        {
          "name": "Get Order by Order Number",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/number/ORD-12345",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "number", "ORD-12345"]
            },
            "description": "Get an order by order number"
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/1/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "1", "status"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"CONFIRMED\"\n}"
            },
            "description": "Update an order's status"
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/1/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "1", "cancel"]
            },
            "description": "Cancel an order"
          }
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "1"]
            },
            "description": "Delete an order (admin only)"
          }
        },
        {
          "name": "Get Orders by Customer ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/customer/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "customer", "1"]
            },
            "description": "Get orders by customer ID"
          }
        },
        {
          "name": "Get Orders by Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/status/PENDING",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "status", "PENDING"]
            },
            "description": "Get orders by status"
          }
        },
        {
          "name": "Get Pending Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "pending"]
            },
            "description": "Get pending orders"
          }
        },
        {
          "name": "Get Orders by Date Range",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/date-range?startDate=2023-01-01T00:00:00&endDate=2023-12-31T23:59:59",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "date-range"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2023-01-01T00:00:00"
                },
                {
                  "key": "endDate",
                  "value": "2023-12-31T23:59:59"
                }
              ]
            },
            "description": "Get orders by date range"
          }
        }
      ]
    },
    {
      "name": "Inventory Management",
      "description": "Endpoints for managing inventory",
      "item": []
    },
    {
      "name": "Payment Processing",
      "description": "Endpoints for processing payments",
      "item": []
    },
    {
      "name": "Loyalty Program",
      "description": "Endpoints for managing loyalty points, rewards, and tiers",
      "item": []
    },
    {
      "name": "Promotions & Discounts",
      "description": "Endpoints for managing promotions and discounts",
      "item": []
    },
    {
      "name": "Reporting",
      "description": "Endpoints for generating and retrieving reports",
      "item": []
    },
    {
      "name": "Analytics",
      "description": "Endpoints for generating and retrieving analytics",
      "item": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ]
}